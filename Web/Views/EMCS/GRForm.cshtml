@model  App.Web.Models.EMCS.GoodReceiveModel
@{
    var mode = ViewBag.crudMode;
    var title = mode == "I" ? "Add" : (mode == "U" ? "Update" : "Delete");
    ViewBag.Title = "BAST " + title;
}
@Styles.Render("~/Content/EMCS/Autocomplete/easy-autocomplete.css")   
@Styles.Render("~/Content/EMCS/Autocomplete/easy-autocomplete.themes.css")
@Styles.Render("~/Content/EMCS/Custom.css")
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "FormGR" }))
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-6">
        <form>
            <div class="card">
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">BAST Number</label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.GrNo, new { @class = "form-control", @id = "GrNo", @readonly = "readonly", placeholder = "Goods Receive Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.GrNo)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">PIC Name <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.PicName, new { @Id = "PicName", @class = "form-control required", placeholder = "PIC Name" })
                        <div>@Html.ValidationMessageFor(m => m.Data.PicName)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Contact <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.PhoneNumber, new { @class = "form-control required", placeholder = "Phone Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.PhoneNumber)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">ID Card# <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.KtpNumber, new { @class = "form-control required", placeholder = "KTP Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.KtpNumber)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Driving License# <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.SimNumber, new { @class = "form-control required", placeholder = "SIM Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.SimNumber)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">License Expiry Date# <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.Data.SimExpiryDate, new { htmlAttributes = new { @class = "form-control required date", autocomplete = "off", @readonly = "readonly", style = "background:white;", placeholder = "License Expire Date" } })
                        <div>@Html.ValidationMessageFor(m => m.Data.SimExpiryDate)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Vendor #ID & Name <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        <select class="Vendor" name="data.Vendor" id="Vendor" required>
                            @if (!string.IsNullOrEmpty(Model.Data.Vendor))
                            {
                                <option value="@Model.Data.Vendor" selected>@Model.Data.Vendor - @Model.Data.VendorName</option>
                            }
                        </select>
                        <div>@Html.ValidationMessageFor(m => m.Data.Vendor)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Vendor Address</label>
                    <div class="col-md-8">
                        <textarea class="form-control" id="VendorAddress" readonly="readonly" name="VendorAddress" placeholder="Vendor Address" rows="3" cols="3">@(Model.Data.VendorAddress != "" ? Model.Data.VendorAddress : "") </textarea>
                        <div>@Html.ValidationMessageFor(m => m.Data.Vendor)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Vehicle Type <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.VehicleType, new { @class = "form-control required", placeholder = "Truck Type" })
                        <div>@Html.ValidationMessageFor(m => m.Data.VehicleType)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Vehicle Brand <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.VehicleMerk, new { @class = "form-control required", placeholder = "Truck Merk" })
                        <div>@Html.ValidationMessageFor(m => m.Data.VehicleMerk)</div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <form id="LoginValidation">
            <div class="card">
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">No STNK <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.StnkNumber, new { @class = "form-control required", placeholder = "STNK Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.StnkNumber)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">KIR Number <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.KirNumber, new { @class = "form-control required", placeholder = "KIR Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.KirNumber)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">KIR Expiry Date <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.Data.KirExpire, new { htmlAttributes = new { @class = "form-control required date", autocomplete = "off", @readonly = "readonly", style = "background:white;", placeholder = "KIR Expire Date" } })
                        <div>@Html.ValidationMessageFor(m => m.Data.KirExpire)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">License Plate <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.Data.NopolNumber, new { @class = "form-control required", placeholder = "NOPOL Number" })
                        <div>@Html.ValidationMessageFor(m => m.Data.NopolNumber)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">ETP <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        @Html.EditorFor(m => m.Data.EstimationTimePickup, new { htmlAttributes = new { @class = "form-control required date", autocomplete = "off", @readonly = "readonly", style = "background:white;", placeholder = "Estimation Time Pickup Date" } })
                        <div>@Html.ValidationMessageFor(m => m.Data.EstimationTimePickup)</div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">APAR</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.Data.Apar, new SelectList(Model.YesNo, "Value", "Text"), new { @class = "js-states Apar form-control" })
                        <div>@Html.ValidationMessageFor(m => m.Data.Apar)</div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">APD</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.Data.Apd, new SelectList(Model.YesNo, "Value", "Text"), new { @class = "js-states Apd form-control" })
                        <div>@Html.ValidationMessageFor(m => m.Data.Apd)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Pickup Point (B. Area) <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        <select class="select2" name="data.PickupPoint" id="PickupPoint" required>
                            @if (!string.IsNullOrEmpty(Model.Data.PickupPoint))
                            {
                                <option value="@Model.Data.PickupPoint" selected>@Model.Data.PickupPoint - @Model.Data.PlantName</option>
                            }
                        </select>
                        <div>@Html.ValidationMessageFor(m => m.Data.PickupPoint)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Pickup Point Pic <span class="text-danger">*</span></label>
                    <div class="col-md-8">
                        <select class="select2" name="data.PickupPic" id="PickupPic" required>
                            @if (!string.IsNullOrEmpty(Model.Data.PickupPic))
                            {
                                <option value="@Model.Data.PickupPic" selected>@Model.Data.PickupPic - @Model.Data.PickupPicName</option>
                            }
                        </select>
                        <div>@Html.ValidationMessageFor(m => m.Data.PickupPoint)</div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-3 tex-left col-sm-12 col-xs-12 control-label" style="text-align:left;">Notes</label>
                    <div class="col-md-8">
                        @Html.TextAreaFor(m => m.Data.Notes, new { @class = "form-control", @Placeholder = "Add Notes", @rows = "4", @cols = "4" })
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-12">
        <div class="form form-horizontal">
            <div class="box">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            
                        </div>
                    </div>

                    <div class="col-md-12">&nbsp;</div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="toolbar" id="toolbar">
                                <button id="btnAddItem" type="button" class="btn btn-success"><i class="fa fa-plus-circle"></i>&nbsp;Add Item</button>
                                <a data-modal="myModalPlace" id="linkAddItem" class="btn btn-success btn-sm" href="/EMCS/CreateGrItem" style="display:none;"><i class="fa fa-plus-circle"></i>&nbsp;Add Item</a>
                            </div>
                            <table class="table table-striped table-bordered" id="TblGoodReceive"></table>
                        </div>
                    </div>
                </div>
                <div class="box-footer text-right">
                    <input type="hidden" id="Status" name="data.Status" value="Draft" />
                    @Html.HiddenFor(m => m.Data.Id, new { @class = "IdGr", @Id = "IdGr" })
                    @Html.HiddenFor(m => m.Data.Id, new { @class = "Id", @Id = "Id" })
                    <a href="~/emcs/Grlist" class="btn btn-default btn-outline-secondary"><i class="fa fa-arrow-circle-o-left"></i>&nbsp;Back</a>
                    <button type="button" id="BtnDraft" class="btn btn-info"><i class="fa fa-save"></i>&nbsp;Save as Draft</button>
                    <button type="submit" id="BtnSubmit" class="btn btn-success"><i class="fa fa-paper-plane"></i>&nbsp;Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>

    <div id='myModalPlace' class='modal fade in'>
        <div class="modal-dialog" style="width:800px">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>

    <div id='myModalPreview' class='modal fade in'>
        <div class="modal-dialog" style="width:800px">
            <div class="modal-content">
                <div id='myModalPreviewContent'></div>
            </div>
        </div>
    </div>

    <a data-modal="myModalPlace" href="/EMCS/UpdateGrItem/1" class="editRecord" style="display:none;">
        <i class="fa fa-edit"></i> Update Item
    </a>
    <a data-modal="myModalPlace" href="/EMCS/UploadGrItem/1" class="uploadRecord" style="display:none;">
        <i class="fa fa-edit"></i> Upload Item
    </a>
    <a data-modal="myModalPreview" href="/EMCS/PreviewDA/1" class="PreviewFile" style="display:none;">
        <i class="fa fa-edit"></i> Preview File Upload
    </a>
    <a href="/EMCS/DownloadGrItem/1" class="downloadFile" style="display:none;">
        <i class="fa fa-edit"></i> Download Item
    </a>

    @Html.HiddenFor(m => m.Data.CreateBy)
    @Html.HiddenFor(m => m.Data.CreateDate)
    @Html.HiddenFor(m => m.Data.UpdateBy)
    @Html.HiddenFor(m => m.Data.UpdateDate)
    @Html.HiddenFor(m => m.Data.IsDelete)
}
<input type="hidden" name="HideAction" id="HideAction" value="true" />
@Html.Partial("~/Views/EMCS/Modal.PreviewDocument.cshtml")
@Styles.Render("~/Content/EMCS/SweetAlert/sweetalert2.min.css")
@Scripts.Render("~/Scripts.app/EMCS/function.cshtml.js")
@Scripts.Render("~/Content/EMCS/Autocomplete/jquery.easy-autocomplete.js")
@section Scripts{
    @Scripts.Render("~/Content/EMCS/SweetAlert/sweetalert2.min.js")
    <script>
        var $hideAction = $("#HideAction").val();
    </script>
    @Scripts.Render("~/Scripts.app/EMCS/GoodsReceiveForm.cshtml.js")
    <script src="@Url.Content("~/Scripts.app/EMCS/Custom.js")"></script>
}
